if {![namespace exists ::IMEX]} { namespace eval ::IMEX {} }
set ::IMEX::dataVar [file dirname [file normalize [info script]]]
set ::IMEX::libVar ${::IMEX::dataVar}/libs

catch { setDesignMode -process 130 }
catch { setAnalysisMode -analysisType onChipVariation }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -skew true }
catch { setAnalysisMode -usefulSkew true }
catch { setAnalysisMode -virtualIPO false }
catch { setOptMode -opt_view_pruning_hold_views_active_list { VIEW_HOLD } }
catch { setOptMode -opt_view_pruning_setup_views_active_list { VIEW_SETUP } }
catch { setOptMode -opt_view_pruning_hold_views_persistent_list { VIEW_HOLD} }
catch { setOptMode -opt_view_pruning_setup_views_persistent_list { VIEW_SETUP} }
catch { setOptMode -opt_view_pruning_tdgr_setup_views_persistent_list { VIEW_SETUP} }
catch { setOptMode -opt_view_pruning_hold_target_slack_auto_flow 0 }
catch { setOptMode -opt_drv_margin 0 }
catch { setOptMode -opt_drv true }
catch { setOptMode -opt_resize_flip_flops true }
catch { setOptMode -opt_preserve_all_sequential false }
catch { setOptMode -opt_setup_target_slack 0 }
catch { setPathGroupOptions reg2reg -effortLevel high -weight 2 }
catch { setPathGroupOptions reg2reg -late -slackAdjustment -0 }
catch { setPathGroupOptions default -late -slackAdjustment -0 }
catch { setExtractRCMode  -engine postRoute -coupled false }
catch {setNanoRouteMode -quiet -drouteAntennaFactor 1.000000}
catch {setNanoRouteMode -quiet -drouteAutoStop true}
catch {setNanoRouteMode -quiet -drouteEndIteration 1}
catch {setNanoRouteMode -quiet -drouteFixAntenna true}
catch {setNanoRouteMode -quiet -droutePostRouteLithoRepair false}
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "auto"}
catch {setNanoRouteMode -quiet -drouteStartIteration 0}
catch {setNanoRouteMode -quiet -drouteUseLefPinTaperRule true}
catch {setNanoRouteMode -quiet -extractDesignSignature 132777241}
catch {setNanoRouteMode -quiet -extractRcModelFile "${::IMEX::libVar}/misc/rc_model.bin"}
catch {setNanoRouteMode -quiet -extractThirdPartyCompatible false}
catch {setNanoRouteMode -quiet -grouteExpTdStdDelay 58.500000}
catch {setNanoRouteMode -quiet -grouteExpTdUseTifTimingEngineForImportDesign false}
catch {setNanoRouteMode -quiet -routeBottomRoutingLayer 1}
catch {setNanoRouteMode -quiet -routeInsertAntennaDiode false}
catch {setNanoRouteMode -quiet -routeTopRoutingLayer 5}
catch {setNanoRouteMode -quiet -routeWithEco false}
catch {setNanoRouteMode -quiet -routeWithLithoDriven false}
catch {setNanoRouteMode -quiet -routeWithSiDriven false}
catch {setNanoRouteMode -quiet -routeWithTimingDriven false}

catch { setPlaceMode -maxRouteLayer 5 }
catch { setPlaceMode -place_design_floorplan_mode false }
catch { setPlaceMode -place_detail_check_route false }
catch { setPlaceMode -place_detail_preserve_routing true }
catch { setPlaceMode -place_detail_remove_affected_routing false }
catch { setPlaceMode -place_detail_swap_eeq_cells false }
catch { setPlaceMode -place_global_clock_gate_aware true }
catch { setPlaceMode -place_global_cong_effort auto }
catch { setPlaceMode -place_global_ignore_scan true }
catch { setPlaceMode -place_global_ignore_spare false }
catch { setPlaceMode -place_global_module_aware_spare false }
catch { setPlaceMode -place_global_place_io_pins true }
catch { setPlaceMode -place_global_reorder_scan true }
catch { setPlaceMode -powerDriven false }
catch { setPlaceMode -timingDriven true }
catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepInstInSdc false -keepFlatten true }
catch { setUsefulSkewMode -opt_skew_eco_route false }
catch { setUsefulSkewMode -opt_skew_max_allowed_delay 1 }
catch { setUsefulSkewMode -opt_skew_no_boundary false }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -eng_enablePrePlacedFlow false }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -SIAware false }
catch { setDelayCalMode -socv_accuracy_mode low }
catch { setPinAssignMode -pinEditInBatch true }
catch { setHierMode -disableArt false }
catch { setHierMode -reportPostRouteArtTiming false }
catch { setHierMode -trialRouteHonorReadOnly false }
catch { setImportMode -discardFloatingVNets false }
catch { setImportMode -keepEmptyModule true }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setRouteMode -earlyGlobalHonorMsvRouteConstraint false }
catch { setRouteMode -earlyGlobalRoutePartitionPinGuide true }
catch { setEndCapMode -boundary_tap false }
catch { setFPlanMode -cellsForExtraSites {} }
catch { setFPlanMode -defaultRowPatternSite {} }
catch { setFPlanMode -defaultTechSite CoreSite }
catch { setFPlanMode -extraSites {} }
catch { setFPlanMode -firstRowSiteIndex 0 }
catch { setFPlanMode -lastRowSiteIndex -1 }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -place_check_ignore_fixed_cell_list {} }
catch { setFPlanMode -powerRailLayer {} }
